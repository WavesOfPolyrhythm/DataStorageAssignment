using Business.Dtos;
using Business.Models;
using Data.Entities;

namespace Business.Factories;

public static class ProjectFactory
{
    public static ProjectRegistrationForm Create() => new();


    public static ProjectEntity Create(ProjectRegistrationForm form) => new()
    {
        Title = form.Title,
        Description = form.Description,
        StartDate = form.StartDate,
        EndDate = form.EndDate,
        EmployeeId = form.EmployeeId,
        TotalPrice = form.TotalPrice,
        CustomerId = form.CustomerId,
        ServiceId = form.ServiceId,
        StatusId = form.StatusId
    };

    public static ProjectModel Create(ProjectEntity entity) => new()
    {
        Id = entity.Id,
        Title = entity.Title,
        Description = entity.Description,
        StartDate = entity.StartDate,
        EndDate = entity.EndDate,
        CustomerName = entity.Customer.CustomerName,
        StatusName = entity.Status.StatusName,
        TotalPrice = entity.TotalPrice,
        ServiceName = entity.Service.Name,
        ServicePrice = entity.Service.Price,
        Unit = entity.Service.Unit.Name,

        //Code generated by Chat GPT
        ProjectManager = entity.Employee != null
        ? $"{entity.Employee.Name} ({entity.Employee.Email})"
        : "No Manager Assigned",

        Role = entity.Employee?.Role?.RoleName ?? "No Role Assigned",

        CustomerContact = entity.Customer.CustomerContacts.FirstOrDefault() != null
        ? $"{entity.Customer.CustomerContacts.First().Name} ({entity.Customer.CustomerContacts.First().Email})"
        : "No Contact"
    };
 
}
