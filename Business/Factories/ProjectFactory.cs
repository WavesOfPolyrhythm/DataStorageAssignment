using Business.Dtos;
using Business.Models;
using Data.Entities;

namespace Business.Factories;

/// <summary>
/// Code generated by Chat GPT to implement CalculateTotalPrice and ensure accurate project cost calculations..
/// Additionally, the code formats and displays key project details such as:
/// - Project Manager: If an employee is assigned, their name and email are displayed. Otherwise,
/// a default message is shown.
/// 
/// Ensures that the StartDate and EndDate are only updated if the user provides a new value.  
/// If no new value is provided, the existing date is retained.
/// </summary>
public static class ProjectFactory


{
    public static ProjectRegistrationForm Create() => new();
    public static ProjectUpdateForm Update() => new();


    public static ProjectEntity Create(ProjectRegistrationForm form, ServiceEntity service) => new()
    {
        Title = form.Title,
        Description = form.Description,
        StartDate = form.StartDate,
        EndDate = form.EndDate,
        EmployeeId = form.EmployeeId,
        TotalPrice = CalculateTotalPrice(service, form.Units),
        CustomerId = form.CustomerId,
        ServiceId = form.ServiceId,
        StatusId = form.StatusId
    };

    public static ProjectModel Create(ProjectEntity entity) => new()
    {
        Id = entity.Id,
        Title = entity.Title,
        Description = entity.Description,
        StartDate = entity.StartDate,
        EndDate = entity.EndDate,
        CustomerName = entity.Customer.CustomerName,
        StatusName = entity.Status.StatusName,
        TotalPrice = entity.TotalPrice,
        ServiceName = entity.Service.Name,
        ServicePrice = entity.Service.Price,
        Unit = entity.Service.Unit.Name,

        //Code generated by Chat GPT
        ProjectManager = entity.Employee != null
        ? $"{entity.Employee.Name} ({entity.Employee.Email})"
        : "No Manager Assigned",

        Role = entity.Employee?.Role?.RoleName ?? "No Role Assigned",

        CustomerContact = entity.Customer.CustomerContacts.FirstOrDefault() != null
        ? $"{entity.Customer.CustomerContacts.First().Name} ({entity.Customer.CustomerContacts.First().Email})"
        : "No Contact"
    };

    public static ProjectEntity Update(ProjectUpdateForm form, ProjectEntity existingEntity, EmployeeEntity employee, CustomerEntity customer, ServiceEntity service, StatusEntity status) => new()
    {
        Id = form.Id,
        Title = string.IsNullOrWhiteSpace(form.Title) ? existingEntity.Title : form.Title,
        Description = string.IsNullOrWhiteSpace(form.Description) ? existingEntity.Description : form.Description,
        StartDate = form.StartDate != default ? form.StartDate : existingEntity.StartDate,
        EndDate = form.EndDate != default ? form.EndDate : existingEntity.EndDate,
        TotalPrice = CalculateTotalPrice(service, form.Units),
        EmployeeId = employee.Id,
        Employee = employee,
        CustomerId = customer.Id,
        Customer = customer,
        ServiceId = service.Id,
        Service = service,
        StatusId = status.Id,
        Status = status,
    };


    //Code generated by Chat GPT
    private static decimal CalculateTotalPrice(ServiceEntity service, int units)
    {
        return service.Price * units;
    }
}
